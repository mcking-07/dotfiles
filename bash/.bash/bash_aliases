# custom bash aliases and abbreviations by @mcking-07

# batcat
alias bat='batcat'

# change directory
alias ..='cd ..'
alias ...='cd -'

# check open ports
alias ports='netstat -tulanp'

# confirmation before overwriting
alias cp="cp -i"
alias mv='mv -i'

# docker
alias dps='docker ps'
alias dpsa='docker ps -a --format "table {{.Names}}\t{{.Image}}\t{{.Status}}"'
alias dimg='docker image ls --format "table {{.Repository}}\t{{.Tag}}\t{{.ID}}" | sort'
abbrev-alias -g dkstrt='docker start'
abbrev-alias -g dkstp='docker stop'
abbrev-alias -g dkrm='docker rm'
abbrev-alias -g dkrmi='docker rmi'
abbrev-alias -g dklgs='docker logs'
alias dvlm='docker volume ls'
alias dntrk='docker network ls'
abbrev-alias -g dkterm='docker exec -it'
alias dcps='docker-compose ps'
alias dcup='docker-compose up'
alias dcdn='docker-compose down'
alias dcdrm='docker-compose down --rmi local -v'

# git
alias clone='git clone'
alias gb='git branch'
alias gs='git status'
alias gl='git log'
alias gps='git push'
alias gp='git pull'
alias gpo='git pull origin main'
alias gsh='git stash'
alias gsp='git stash pop'
abbrev-alias -g gco='git checkout'
abbrev-alias -g gcm='git checkout main'
alias gw='git whatchanged'

# grep
alias grep='grep --color=always'
alias egrep='egrep --color=always'
alias fgrep='find . | grep --color=always'  # find a file
alias hgrep='history | grep --color=always' # find an old command
alias psgrep='ps aux | grep --color=always' # get process details

# journalctl
alias jctl="journalctl -p 3 -xb" # erros only

# launch http server
serve() {
  if [ "$1" != '' ]; then
    command python3 -m http.server "$1" | lt -p "$1"
  else
    command python3 -m http.server 8000 | lt -p 8000
  fi
}
alias servelocal='python3 -m http.server'

# ls config
if command -v exa &>/dev/null; then
  alias ls='exa --color=always --group-directories-first'
  alias la='exa -a --color=always --group-directories-first'
  alias ll='exa -l --color=always --group-directories-first'
  alias lt='exa -aT --color=always --group-directories-first'
else
  alias ls='ls --color=always'
  alias ll='ls -alF --color=always'
  alias la='ls -A --color=always'
  alias l='ls -CF --color=always'
fi

# note maker
note() {
  local NOTES_FILE="$HOME/.bits-and-bobs.md"
  if [ ! -f "$NOTES_FILE" ]; then
    touch "$NOTES_FILE"
  fi
  local timestamp=$(date "+%Y-%m-%d %H:%M:%S")
  local content="$1"
  local title="$2"
  local note_header="## $timestamp"
  if [ -n "$title" ]; then
    note_header+=" - **$title**"
  fi
  echo -e "$note_header\n" >>"$NOTES_FILE"
  echo -e "$content\n" >>"$NOTES_FILE"
  echo "---" >>"$NOTES_FILE"
}

# notes viewer
notes() {
  local NOTES_FILE="$HOME/.bits-and-bobs.md"
  command batcat $NOTES_FILE
}

# source
alias ss='source ~/.bashrc'

# trash-cli as rm
if command -v trash &>/dev/null; then
  alias rm='trash'
  alias rmll='trash-list'
  alias rmrs='trash-restore'
  alias rmrx='trash-empty'
fi

# vim as neovim
if command -v nvim &>/dev/null; then
  alias vi='nvim'
  alias vim='nvim'
fi

# xdg-open
alias open='xdg-open'

# zipfile extractor
ex() {
  if [ -f "$1" ]; then
    case $1 in
      *.tar.gz) tar xzf $1;;
      *.rar) unrar x $1;;
      *.gz) gunzip $1;;
      *.tar) tar xf $1;;
      *.tgz) tar xzf $1;;
      *.zip) unzip $1;;
      *.7z) 7z x $1;;
      *.tar.xz) tar xf $1;;
      *) echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}
